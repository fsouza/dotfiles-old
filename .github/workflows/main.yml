name: Build
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
jobs:
  bootstrap:
    strategy:
      matrix:
        os:
          - ubuntu-20.04

    name: bootstrap
    runs-on: ${{ matrix.os }}
    steps:
      - name: install neovim nightly
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-20.04" ]; then
            suffix=linux64
          else
            suffix=macos
          fi
          curl -L https://github.com/neovim/neovim/releases/download/nightly/nvim-${suffix}.tar.gz | sudo tar -C /usr/local --strip 1 -xzf -

      - name: install build deps on mac
        if: matrix.os == 'macos-latest'
        run: |
          brew install bash shellcheck ninja libyaml elixir opam zsh

      - name: install build deps on ubuntu
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck ninja-build libyaml-dev opam zsh

      - uses: actions/checkout@v2.3.4
        with:
          submodules: 'recursive'

      # TODO: shellcheck from the root and check everything? :)
      - name: run shellcheck on vimfiles
        run: cd nvim && make shellcheck

      - name: get opam version
        id: get-opam-version
        run: |
          echo "::set-output name=version::$(opam --version)"
        shell: bash

      - name: opam cache
        id: opam-cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.opam
          key: "${{ matrix.os }}-${{ steps.get-opam-version.outputs.version }}"

      - name: opam init
        run: opam init --disable-sandboxing -n

      - uses: actions/setup-node@v2.1.4
        with:
          node-version: "14.x"

      - uses: actions/setup-python@v2.2.1
        with:
          python-version: "3.x"

      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable

      - uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.x"

      - name: langservers cache
        id: nvim-langservers-cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/nvim/langservers
          key: "${{ matrix.os }}-${{ hashFiles('langservers/setup.sh') }}"

      - name: hererocks cache
        id: nvim-hererocks-cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/nvim/hr
          key: "${{ matrix.os }}-${{ hashFiles('Makefile') }}-${{ hashFiles('scripts/bootstrap.lua') }}"

      - name: get python version
        id: get-python-version
        run: |
          echo "::set-output name=version::$(python3 --version)"

      - name: virtualenv cache
        id: nvim-virtualenv-cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/nvim/venv
          key: "${{ matrix.os }}-${{ hashFiles('scripts/bootstrap.lua') }}-${{ steps.get-python-version.outputs.version }}"

      - name: run setup
        run: ./bin/setup

      - name: run luacheck
        run: make -f $HOME/.config/nvim/Makefile luacheck
